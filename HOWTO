0. Suppose in your dev environment, you already set/install gcc, opengl/mesa, freeglut, glew and the most up-to-date graphics card driver. 
In my computer glew is installed in /usr/lib64, so I would set  LD_LIBRARY_PATH=LD_LIBRARY_PATH:/usr/lib64 in my dev environment, especially for run-time.
0.1 Additional Centos 6 notes:
sudo yum install libXmu-devel libXi-devel libGL-devel dos2unix git wget
sudo yum install freeglut
yum whatprovides \*/glu.h
mesa-libGLU-devel-10.1.2-2.el6.x86_64
yum whatprovides \*/glut.h
freeglut-devel-2.6.0-1.el6.x86_64
sudo yum install -y freeglut-devel-2.6.0-1.el6.x86_64 mesa-libGLU-devel-10.1.2-2.el6.x86_64

1. Start from blank
Create a Eclipse CDT project, eg. a 'Hello World' project, preferably a 'Cross GCC' project.
Right click the project, 'properties', select 'C/C++ Build', change 'Configuration' to <All configurations>.
'Settings', 'Cross GCC Linker', by 'Libraries(-l)' click the '+' sign for the following (case sensitive):
<GLEW>
<GLU>
<GL>
<glut>

2. Copy the sources file into your 'src' folder. Create/copy the the 'shaders' folder. Create/copy the 'models' folder.
2.1 Specify abosulte path to shaders in Bunny.cpp (stupid but easy to understand) by locating these two lines:
	vs = textFileRead("/home/zhikai/Desktop/Bunny/Shaders/phong.vert");
	fs = textFileRead("/home/zhikai/Desktop/Bunny/Shaders/phong.frag");
2.2 Specify abosulte path to one model in Bunny.cpp by locating the following line:
	bunny.initFromFile("/home/zhikai/Desktop/Bunny/Models/bunny.gts");

3. Right click the project <Bunny>, 'Build project'. So far, the project should compile (with a lot warings). In Eclipse, due to LD_LIBRARY_PATH, you can run the binary. So we open a shell console.
$ cd $PATH_TO_BUNNY/Debug
$ export LD_LIBRARY_PATH=LD_LIBRARY_PATH:/usr/lib64
$ ./Bunny

4. You will see Demo 1.0 result of Phong shading as in Demo01PhongShading.png
